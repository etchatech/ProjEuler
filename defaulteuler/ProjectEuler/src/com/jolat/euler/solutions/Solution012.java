package com.jolat.euler.solutions;

import com.jolat.euler.launcher.AbstractCommand;
import com.jolat.euler.launcher.Eutils;

public class Solution012 extends AbstractCommand
{

	@Override
	public String execute()
	{
		// 12375 is too high?
		String answer = "Not high enough.";
		long starting = 12374L;
		long value = Eutils.getSumOfNumbersFromOneTo( starting );
		for( long i = starting + 1L; i < 15000L; i++ )
		{
			value += i;
			if( Eutils.isPrime( value ) )
			{
				continue;
			}
			if( Eutils.countDivisorsIncluding1( value, i ) >= 500 )
			{
				answer = "" + value;
				break;
			}
		}
		return answer;
	}

	@Override
	public String getSolutionDetails()
	{
		return "The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:\n"
				+ "\n"
				+ "1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...\n"
				+ "\n"
				+ "Let us list the factors of the first seven triangle numbers:\n"
				+ "\n"
				+ " 1: 1\n"
				+ " 3: 1,3\n"
				+ " 6: 1,2,3,6\n"
				+ "10: 1,2,5,10\n"
				+ "15: 1,3,5,15\n"
				+ "21: 1,3,7,21\n"
				+ "28: 1,2,4,7,14,28\n"
				+ "We can see that 28 is the first triangle number to have over five divisors.\n"
				+ "\n"
				+ "What is the value of the first triangle number to have over five hundred divisors?";
	}

	public static void main( String[] args )
	{
		new Solution012();
	}

}
